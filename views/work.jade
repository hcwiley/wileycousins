extends layout

block content
  style
    .modal-dialog {width:70%;}
    .modal-dialog .modal-body img {max-height: 500px;}
    .thumbnail {margin-bottom:6px;}
  :coffeescript
    $(window).ready ->
      $(".img-thumbnail").click ->
        $(".modal-body").empty()
        title = $(@).attr("title")
        $(".modal-title").html title
        $($(@).parents("div").html()).appendTo ".modal-body"
        $("#myModal").modal show: true
  #myModal.modal.fade(tabindex='-1', role='dialog')
      .modal-dialog
          .modal-content
            .modal-header
              button.close(type='button', data-dismiss='modal') x
              h3.modal-title Heading
            .modal-body
            .modal-footer
              button.btn.btn-default(data-dismiss='modal') Close
  #pcb-design
    .container
      .row
        h2.text-center.blue pcb <span style='font-size:40px' class='white'>&amp;</span> firmware design
        .col-sm-12
          h3.green clockblock
          p.white The clockblock uses an ATTiny167 with 16KB of flash and 512B of RAM. At compilation, the application takes about 6KB of program and 30B of RAM. Currently firmware must be flashed onto the board with an ISP, but hardware supports USB bootloading*. An Arduino-compatible bootloader is in the works. The boards are almost entirely surface mount, so solder-paste and a reflow tool of some sort (hot-air gun, toaster, hot-plate) are recommended.
          .col-sm-3
            br
            a
              img.img-thumbnail(src='/images/clockblock-1.jpg', title='clockblock pcb')
          .col-sm-3
            br
            a
              img.img-thumbnail(src='/images/clockblock-2.jpg', title='clockblock pcb')
          .col-sm-3
            br
            a
              img.img-thumbnail(src='/images/clockblock-3.jpg', title='clockblock pcb')
          .col-sm-3
            a
              img.img-thumbnail(src='/images/clockblock-4.jpg', title='clockblock pcb layout')
        .row
          .col-sm-6.col-sm-offset-3
            br
            hr.white.dotted
            br
        .col-sm-12
          h3.green flamejets
          p.white A mechatronics project that <a href='/#michael' target='_blank' class='blue'>Michael Cousins</a> built with Chris Yarka. This box shoots four propane powered flames into the air. A PIC32 microcontroller varies the heights.
          .col-sm-3
            br
            a
              img.img-thumbnail(src='/images/flame-pcb1.jpg', title='flame jet pcb')
          .col-sm-3
            br
            a
              img.img-thumbnail(src='/images/flame-pcb2.jpg', title='flame jet pcb')
          .col-sm-3
            br
            a
              img.img-thumbnail(src='/images/flame-pcb3.jpg', title='flame jet pcb')
          .col-sm-3
            a
              img.img-thumbnail(src='/images/flame-layout.png', title='flame jet pcb layout')
        .row
          .col-sm-6.col-sm-offset-3
            br
            hr.white.dotted
            br
        .col-sm-12
          h3.green rgb lighting module
          p.white A daisy-chainable lighting module to brighten up your existence (and/or living space). The modules communicate over RS232 and recieve power over standard CAT5 cables. They have microcontrollers for full color lighting effects. Check it out on <a href='https://github.com/mcous/rgb' target='_blank' class='blue'>Github</a>
          .col-sm-3
            br
            a
              img.img-thumbnail(src='/images/rgb-1.jpg', title='rgb module pcb front')
          .col-sm-3
            br
            a
              img.img-thumbnail(src='/images/rgb-2.jpg', title='rgb module pcb back')
          .col-sm-3
            br
            a
              img.img-thumbnail(src='/images/rgb-3.jpg', title='rgb module pcb back')
          .col-sm-3
            br
            a
              img.img-thumbnail(src='/images/rgb-4.jpg', title='rgb module pcb front')
    .row
      .col-sm-12
        br
        br
        br
  #cad.row
    br
    .container
      h2.blue.text-center <span class='blue' style='font-size:40px'>3</span>d modeling
      .row
        .col-sm-12
          h3.green game controller
          p A fictional videogame controller designed using SolidWorks; renderings were done in PhotoView 360.
          .col-sm-3
            br
            a
              img.img-thumbnail(src='/images/controller-1.jpg', title='game controller front')
          .col-sm-3
            br
            a
              img.img-thumbnail(src='/images/controller-2.jpg', title='game controller front')
          .col-sm-3
            br
            a
              img.img-thumbnail(src='/images/controller-3.jpg', title='game controller exploded')
          .col-sm-3
            br
            a
              img.img-thumbnail(src='/images/controller-4.jpg', title='game controller exploded')
      .row
        .col-sm-6.col-sm-offset-3
          br
          hr.dotted
          br
      .row
        .col-sm-5
          h3.green long weekend in spain
          p This piece explores the border between designing a building and sculpting an object. I wanted to create building/object that is influenced by Antoni Gaudi in form. This piece designed and rendered in Maya.
          .col-sm-8.col-sm-offset-2
            a
              img.img-thumbnail(src='/images/spain-1.jpg', title='long weekend in spain')
        .col-sm-5.col-sm-offset-1
          h3.green building bridges out of buildings
          p These 3D prints are made from photographs that were extruded into 3D space through a custom algorithm, and then stitched together in Rhino CAD
          .col-sm-12
            a
              img.img-thumbnail(src='/images/buildings.jpg', title='building bridges out of buildings')
  .row
    .col-sm-12
      br
      br
      br
  #software
    .container
      .row
        h2.text-center software <span style='font-size:40px' class='white'>&amp;</span> web
        h2.text-center(style='margin-top:-5px;') design <span style='font-size:40px' class='white'>&amp;</span> development 
        .col-sm-12
          h3.green kinobi
          p.white <a href='https://twitter.com/ChapmanSnowden' target='_blank'>Chapman Snowden (CEO)</a>, <a href='/philwinfield.com' target='_blank'>Phil Winfield (Designer)</a>, <a href='http://zackdever.com/' target='_blank'>Zack Dever (Developer)</a>, and <a href='/#cole' target='_blank'>Cole Wiley</a> (Developer) worker together for 6 months to launch Kinobi; a web app that allowed users to receive realtime feedback while learning kinesthetic skills. Kinobi presented at <a href='http://siliconbayounews.com/2012/05/25/kinobi-ignition-companies-make-big-impression-at-tc-disrupt-new-york/'>Tech Crunch Disrupt NYC 2012: Startup Alley</a> &amp; <a href='http://techcrunch.com/2012/09/11/kinobi-will-use-kinect-to-teach-you-yoga-dancing-or-maybe-even-surgery/'>Tech Crunch Disrupt SF 2012: Startup Battlefield</a>
          .col-sm-4
            .hidden-xs
              br
              br
              br
            img.img-thumbnail(src='/images/kinobi-1.png')
          .col-sm-8
            <iframe src="//player.vimeo.com/video/42244732" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>
            p.white.text-center
              a(href="http://vimeo.com/42244732") Kinobi Demo
              | &nbsp; from &nbsp;
              a(href="http://vimeo.com/user11694631") Kinobi
              | &nbsp; on &nbsp;
              a(href="https://vimeo.com") Vimeo
        .row
          .col-sm-6.col-sm-offset-3
            br
            hr.white.dotted
            br
        .col-sm-12
          h3.green riverless walk
          p.white "riverless walk" is an installation that bridges the gap of presenting three dimensional objects on a two dimensional surface. <a href='/#cole' target='_blank'>Cole Wiley</a> wrote custom software (writen in a mixture of Java and Arduino using OpenNI for working with the Kinect) that tracks bodies, and communicates with an Arduino to control a motor. The motor rotates a custom designed platform so that the projector and kinect follow the user around the room. The screen encompasses a half circle with a 16ft radius, making it a 50ft long screen.
          .col-sm-3.col-sm-offset-1
            br
            a
              img.img-thumbnail(src='/images/riverless-walk.jpg', title='riverless walk: setup')
          .col-sm-4
            br
            img(width='100%', height='auto', style='display: block', src='http://placehold.it/16x9')
            iframe(width='100%', height='100%', style='position: absolute; top:10px; left:0;', src="//www.youtube.com/embed/kd9stgYV62k", frameborder="0", allowfullscreen)
          .col-sm-3
            br
            a
              img.img-thumbnail(src='/images/projector_rig.jpg', title='riverless walk: projector rig')
            br
        .row
          .col-sm-6.col-sm-offset-3
            br
            hr.white.dotted
            br
        .col-sm-12
          h3.green a community gallery
          p.white A Community Gallery is both a website and a site specific installation. The website is running on Django (Python), and the installation is running a combination of Java, Node.js, and OpenNI. The installation has been majorly refactored, as it was initially written in C++ in VisualStudios.
          .col-sm-3.text-center.col-sm-offset-1
            a(href='http://gallery.art72.org/', target='_blank')
              p.text-center view the site
            a.link(href='http://gallery.art72.org/', target='_blank')
              img(src='/images/page.svg', title='a community gallery')
              img.hover(src='/images/page-white.svg', title='a community gallery')
          .col-sm-4
            img(width='100%', height='auto', style='display: block', src='http://placehold.it/16x9')
            iframe(width='100%', height='100%', style='position: absolute; top:0; left:0;', src="//www.youtube.com/embed/P4_rUViplSY", frameborder="0", allowfullscreen)
          .col-sm-3.text-center
            .row
              a(href='https://github.com/hcwiley/a-community-gallery' target='_blank')
                p.text-center view the web code
              a.link(href='https://github.com/hcwiley/a-community-gallery', target='_blank')
                img(src='/images/octocat.svg', title='a community gallery')
                img.hover(src='/images/octocat-white.svg', title='a community gallery')
            .row
              .col-sm-8.col-sm-offset-2
                hr.dotted
            .row
              a(href='https://github.com/hcwiley/a-community-gallery' target='_blank')
                p.text-center view the installation code
              a.link(href='https://github.com/hcwiley/mediaGallery', target='_blank')
                img(src='/images/octocat.svg', title='a community gallery')
                img.hover(src='/images/octocat-white.svg', title='a community gallery')
